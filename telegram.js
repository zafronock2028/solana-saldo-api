import TelegramBot from 'node-telegram-bot-api';
import 'dotenv/config';
import fs from 'fs';

const token = process.env.TELEGRAM_BOT_TOKEN;
const chatId = process.env.CHAT_ID;
const estadoPath = './estado.json';

const bot = new TelegramBot(token, { polling: true });

// Estado persistente
function guardarEstado(nuevoEstado) {
  fs.writeFileSync(estadoPath, JSON.stringify(nuevoEstado));
}

function leerEstado() {
  try {
    return JSON.parse(fs.readFileSync(estadoPath));
  } catch {
    return { activo: false };
  }
}

// Crear teclado con botones
const teclado = {
  reply_markup: {
    keyboard: [
      ['ğŸš€ Encender Bot', 'ğŸ›‘ Apagar Bot'],
      ['ğŸ“Š Estado', 'ğŸ’° Saldo'],
      ['ğŸ“ˆ OperaciÃ³n Activa', 'ğŸ“‚ Historial']
    ],
    resize_keyboard: true,
    one_time_keyboard: false
  }
};

bot.onText(/\/start/, (msg) => {
  if (msg.chat.id.toString() !== chatId) return;
  bot.sendMessage(chatId, 'Bienvenido al Panel de Control ZafroBot Joyas X100', teclado);
});

bot.on('message', (msg) => {
  if (msg.chat.id.toString() !== chatId) return;

  const estado = leerEstado();

  switch (msg.text) {
    case 'ğŸš€ Encender Bot':
      guardarEstado({ activo: true });
      bot.sendMessage(chatId, 'Bot encendido.');
      break;

    case 'ğŸ›‘ Apagar Bot':
      guardarEstado({ activo: false });
      bot.sendMessage(chatId, 'Bot apagado.');
      break;

    case 'ğŸ“Š Estado':
      bot.sendMessage(chatId, `Estado actual: ${estado.activo ? 'âœ… Activo' : 'â›” Inactivo'}`);
      break;

    case 'ğŸ’° Saldo':
      bot.sendMessage(chatId, 'FunciÃ³n de saldo aÃºn no implementada.');
      break;

    case 'ğŸ“ˆ OperaciÃ³n Activa':
      bot.sendMessage(chatId, 'OperaciÃ³n activa: aÃºn no hay ninguna.');
      break;

    case 'ğŸ“‚ Historial':
      bot.sendMessage(chatId, 'Historial vacÃ­o por ahora.');
      break;
  }
});
